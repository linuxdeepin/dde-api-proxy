/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp ./dde-api-proxy/file/dbus/v1/system/org.deepin.dde.Lastore1.Manager.xml -a ./dde-api-proxy/toolGenerate/qdbusxml2cpp/org.deepin.dde.Lastore1.ManagerAdaptor -i ./dde-api-proxy/toolGenerate/qdbusxml2cpp/org.deepin.dde.Lastore1.Manager.h
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef ORG_DEEPIN_DDE_LASTORE1_MANAGERADAPTOR_H
#define ORG_DEEPIN_DDE_LASTORE1_MANAGERADAPTOR_H

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
#include "./dde-api-proxy/toolGenerate/qdbusxml2cpp/org.deepin.dde.Lastore1.Manager.h"
QT_BEGIN_NAMESPACE
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;
QT_END_NAMESPACE

/*
 * Adaptor class for interface org.deepin.dde.Lastore1.Manager
 */
class ManagerAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "org.deepin.dde.Lastore1.Manager")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"org.deepin.dde.Lastore1.Manager\">\n"
"    <method name=\"CleanArchives\">\n"
"      <arg direction=\"out\" type=\"o\" name=\"job\"/>\n"
"    </method>\n"
"    <method name=\"CleanJob\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"jobId\"/>\n"
"    </method>\n"
"    <method name=\"DistUpgrade\">\n"
"      <arg direction=\"out\" type=\"o\" name=\"job\"/>\n"
"    </method>\n"
"    <method name=\"FixError\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"errType\"/>\n"
"      <arg direction=\"out\" type=\"o\" name=\"job\"/>\n"
"    </method>\n"
"    <method name=\"InstallPackage\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"jobName\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"packages\"/>\n"
"      <arg direction=\"out\" type=\"o\" name=\"job\"/>\n"
"    </method>\n"
"    <method name=\"PackageDesktopPath\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"pkgId\"/>\n"
"      <arg direction=\"out\" type=\"s\" name=\"desktopPath\"/>\n"
"    </method>\n"
"    <method name=\"PackageExists\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"pkgId\"/>\n"
"      <arg direction=\"out\" type=\"b\" name=\"exist\"/>\n"
"    </method>\n"
"    <method name=\"PackageInstallable\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"pkgId\"/>\n"
"      <arg direction=\"out\" type=\"b\" name=\"installable\"/>\n"
"    </method>\n"
"    <method name=\"PackagesDownloadSize\">\n"
"      <arg direction=\"in\" type=\"as\" name=\"packages\"/>\n"
"      <arg direction=\"out\" type=\"x\" name=\"size\"/>\n"
"    </method>\n"
"    <method name=\"PauseJob\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"jobId\"/>\n"
"    </method>\n"
"    <method name=\"PrepareDistUpgrade\">\n"
"      <arg direction=\"out\" type=\"o\" name=\"job\"/>\n"
"    </method>\n"
"    <method name=\"RemovePackage\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"jobName\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"packages\"/>\n"
"      <arg direction=\"out\" type=\"o\" name=\"job\"/>\n"
"    </method>\n"
"    <method name=\"SetAutoClean\">\n"
"      <arg direction=\"in\" type=\"b\" name=\"enable\"/>\n"
"    </method>\n"
"    <method name=\"SetLogger\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"levels\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"format\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"output\"/>\n"
"    </method>\n"
"    <method name=\"SetRegion\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"region\"/>\n"
"    </method>\n"
"    <method name=\"StartJob\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"jobId\"/>\n"
"    </method>\n"
"    <method name=\"UpdatePackage\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"jobName\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"packages\"/>\n"
"      <arg direction=\"out\" type=\"o\" name=\"job\"/>\n"
"    </method>\n"
"    <method name=\"UpdateSource\">\n"
"      <arg direction=\"out\" type=\"o\" name=\"job\"/>\n"
"    </method>\n"
"    <property access=\"read\" type=\"ao\" name=\"JobList\"/>\n"
"    <property access=\"read\" type=\"as\" name=\"SystemArchitectures\"/>\n"
"    <property access=\"read\" type=\"as\" name=\"UpgradableApps\"/>\n"
"    <property access=\"read\" type=\"b\" name=\"SystemOnChanging\"/>\n"
"    <property access=\"read\" type=\"b\" name=\"AutoClean\"/>\n"
"  </interface>\n"
        "")
public:
    ManagerAdaptor(QObject *parent);
    virtual ~ManagerAdaptor();

public: // PROPERTIES
    Q_PROPERTY(bool AutoClean READ autoClean)
    bool autoClean() const;

    Q_PROPERTY(QList<QDBusObjectPath> JobList READ jobList)
    QList<QDBusObjectPath> jobList() const;

    Q_PROPERTY(QStringList SystemArchitectures READ systemArchitectures)
    QStringList systemArchitectures() const;

    Q_PROPERTY(bool SystemOnChanging READ systemOnChanging)
    bool systemOnChanging() const;

    Q_PROPERTY(QStringList UpgradableApps READ upgradableApps)
    QStringList upgradableApps() const;

public Q_SLOTS: // METHODS
    QDBusObjectPath CleanArchives();
    void CleanJob(const QString &jobId);
    QDBusObjectPath DistUpgrade();
    QDBusObjectPath FixError(const QString &errType);
    QDBusObjectPath InstallPackage(const QString &jobName, const QString &packages);
    QString PackageDesktopPath(const QString &pkgId);
    bool PackageExists(const QString &pkgId);
    bool PackageInstallable(const QString &pkgId);
    qlonglong PackagesDownloadSize(const QStringList &packages);
    void PauseJob(const QString &jobId);
    QDBusObjectPath PrepareDistUpgrade();
    QDBusObjectPath RemovePackage(const QString &jobName, const QString &packages);
    void SetAutoClean(bool enable);
    void SetLogger(const QString &levels, const QString &format, const QString &output);
    void SetRegion(const QString &region);
    void StartJob(const QString &jobId);
    QDBusObjectPath UpdatePackage(const QString &jobName, const QString &packages);
    QDBusObjectPath UpdateSource();
Q_SIGNALS: // SIGNALS
};

#endif
