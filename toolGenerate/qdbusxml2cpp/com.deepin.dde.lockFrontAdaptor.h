/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp ./dde-api-proxy/file/dbus/v0/session/com.deepin.dde.lockFront.xml -a ./dde-api-proxy/toolGenerate/qdbusxml2cpp/com.deepin.dde.lockFrontAdaptor -i ./dde-api-proxy/toolGenerate/qdbusxml2cpp/com.deepin.dde.lockFront.h
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef COM_DEEPIN_DDE_LOCKFRONTADAPTOR_H
#define COM_DEEPIN_DDE_LOCKFRONTADAPTOR_H

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
#include "./dde-api-proxy/toolGenerate/qdbusxml2cpp/com.deepin.dde.lockFront.h"
QT_BEGIN_NAMESPACE
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;
QT_END_NAMESPACE

/*
 * Adaptor class for interface com.deepin.dde.lockFront
 */
class LockFrontAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "com.deepin.dde.lockFront")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"com.deepin.dde.lockFront\">\n"
"    <property access=\"read\" type=\"b\" name=\"Visible\"/>\n"
"    <signal name=\"ChangKey\">\n"
"      <arg type=\"s\" name=\"keyEvent\"/>\n"
"    </signal>\n"
"    <method name=\"Show\"/>\n"
"    <method name=\"ShowUserList\"/>\n"
"    <method name=\"ShowAuth\">\n"
"      <arg direction=\"in\" type=\"b\" name=\"active\"/>\n"
"    </method>\n"
"    <method name=\"Suspend\">\n"
"      <arg direction=\"in\" type=\"b\" name=\"enable\"/>\n"
"    </method>\n"
"    <method name=\"Hibernate\">\n"
"      <arg direction=\"in\" type=\"b\" name=\"enable\"/>\n"
"    </method>\n"
"  </interface>\n"
        "")
public:
    LockFrontAdaptor(QObject *parent);
    virtual ~LockFrontAdaptor();

public: // PROPERTIES
    Q_PROPERTY(bool Visible READ visible)
    bool visible() const;

public Q_SLOTS: // METHODS
    void Hibernate(bool enable);
    void Show();
    void ShowAuth(bool active);
    void ShowUserList();
    void Suspend(bool enable);
Q_SIGNALS: // SIGNALS
    void ChangKey(const QString &keyEvent);
};

#endif
