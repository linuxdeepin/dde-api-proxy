/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp ./dde-api-proxy/file/dbus/v1/system/org.deepin.dde.Lastore1.Job.xml -a ./dde-api-proxy/toolGenerate/qdbusxml2cpp/org.deepin.dde.Lastore1.JobAdaptor -i ./dde-api-proxy/toolGenerate/qdbusxml2cpp/org.deepin.dde.Lastore1.Job.h
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef ORG_DEEPIN_DDE_LASTORE1_JOBADAPTOR_H
#define ORG_DEEPIN_DDE_LASTORE1_JOBADAPTOR_H

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
#include "./dde-api-proxy/toolGenerate/qdbusxml2cpp/org.deepin.dde.Lastore1.Job.h"
QT_BEGIN_NAMESPACE
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;
QT_END_NAMESPACE

/*
 * Adaptor class for interface org.deepin.dde.Lastore1.Job
 */
class JobAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "org.deepin.dde.Lastore1.Job")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"org.deepin.dde.Lastore1.Job\">\n"
"    <property access=\"read\" type=\"s\" name=\"Status\"/>\n"
"    <property access=\"read\" type=\"s\" name=\"Description\"/>\n"
"    <property access=\"read\" type=\"x\" name=\"Speed\"/>\n"
"    <property access=\"read\" type=\"s\" name=\"Name\"/>\n"
"    <property access=\"read\" type=\"as\" name=\"Packages\"/>\n"
"    <property access=\"read\" type=\"x\" name=\"CreateTime\"/>\n"
"    <property access=\"read\" type=\"d\" name=\"Progress\"/>\n"
"    <property access=\"read\" type=\"b\" name=\"Cancelable\"/>\n"
"    <property access=\"read\" type=\"s\" name=\"Id\"/>\n"
"    <property access=\"read\" type=\"x\" name=\"DownloadSize\"/>\n"
"    <property access=\"read\" type=\"s\" name=\"Type\"/>\n"
"  </interface>\n"
        "")
public:
    JobAdaptor(QObject *parent);
    virtual ~JobAdaptor();

public: // PROPERTIES
    Q_PROPERTY(bool Cancelable READ cancelable)
    bool cancelable() const;

    Q_PROPERTY(qlonglong CreateTime READ createTime)
    qlonglong createTime() const;

    Q_PROPERTY(QString Description READ description)
    QString description() const;

    Q_PROPERTY(qlonglong DownloadSize READ downloadSize)
    qlonglong downloadSize() const;

    Q_PROPERTY(QString Id READ id)
    QString id() const;

    Q_PROPERTY(QString Name READ name)
    QString name() const;

    Q_PROPERTY(QStringList Packages READ packages)
    QStringList packages() const;

    Q_PROPERTY(double Progress READ progress)
    double progress() const;

    Q_PROPERTY(qlonglong Speed READ speed)
    qlonglong speed() const;

    Q_PROPERTY(QString Status READ status)
    QString status() const;

    Q_PROPERTY(QString Type READ type)
    QString type() const;

public Q_SLOTS: // METHODS
Q_SIGNALS: // SIGNALS
};

#endif
