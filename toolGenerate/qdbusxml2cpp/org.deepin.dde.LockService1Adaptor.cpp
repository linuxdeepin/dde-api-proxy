/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp ./dde-api-proxy/file/dbus/v1/system/org.deepin.dde.LockService1.xml -a ./dde-api-proxy/toolGenerate/qdbusxml2cpp/org.deepin.dde.LockService1Adaptor -i ./dde-api-proxy/toolGenerate/qdbusxml2cpp/org.deepin.dde.LockService1.h
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "./dde-api-proxy/toolGenerate/qdbusxml2cpp/org.deepin.dde.LockService1Adaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class LockService1Adaptor
 */

LockService1Adaptor::LockService1Adaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

LockService1Adaptor::~LockService1Adaptor()
{
    // destructor
}

void LockService1Adaptor::AuthenticateUser(const QString &username)
{
    // handle method call org.deepin.dde.LockService1.AuthenticateUser
    QMetaObject::invokeMethod(parent(), "AuthenticateUser", Q_ARG(QString, username));
}

QString LockService1Adaptor::CurrentUser()
{
    // handle method call org.deepin.dde.LockService1.CurrentUser
    QString username;
    QMetaObject::invokeMethod(parent(), "CurrentUser", Q_RETURN_ARG(QString, username));
    return username;
}

bool LockService1Adaptor::IsLiveCD(const QString &username)
{
    // handle method call org.deepin.dde.LockService1.IsLiveCD
    bool result;
    QMetaObject::invokeMethod(parent(), "IsLiveCD", Q_RETURN_ARG(bool, result), Q_ARG(QString, username));
    return result;
}

void LockService1Adaptor::SwitchToUser(const QString &username)
{
    // handle method call org.deepin.dde.LockService1.SwitchToUser
    QMetaObject::invokeMethod(parent(), "SwitchToUser", Q_ARG(QString, username));
}

void LockService1Adaptor::UnlockCheck(const QString &username, const QString &password)
{
    // handle method call org.deepin.dde.LockService1.UnlockCheck
    QMetaObject::invokeMethod(parent(), "UnlockCheck", Q_ARG(QString, username), Q_ARG(QString, password));
}

