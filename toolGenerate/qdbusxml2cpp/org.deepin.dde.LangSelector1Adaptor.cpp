/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp ./dde-api-proxy/file/dbus/v1/session/org.deepin.dde.LangSelector1.xml -a ./dde-api-proxy/toolGenerate/qdbusxml2cpp/org.deepin.dde.LangSelector1Adaptor -i ./dde-api-proxy/toolGenerate/qdbusxml2cpp/org.deepin.dde.LangSelector1.h
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "./dde-api-proxy/toolGenerate/qdbusxml2cpp/org.deepin.dde.LangSelector1Adaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class LangSelector1Adaptor
 */

LangSelector1Adaptor::LangSelector1Adaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

LangSelector1Adaptor::~LangSelector1Adaptor()
{
    // destructor
}

QString LangSelector1Adaptor::currentLocale() const
{
    // get the value of property CurrentLocale
    return qvariant_cast< QString >(parent()->property("CurrentLocale"));
}

int LangSelector1Adaptor::localeState() const
{
    // get the value of property LocaleState
    return qvariant_cast< int >(parent()->property("LocaleState"));
}

QStringList LangSelector1Adaptor::locales() const
{
    // get the value of property Locales
    return qvariant_cast< QStringList >(parent()->property("Locales"));
}

void LangSelector1Adaptor::AddLocale(const QString &in0)
{
    // handle method call org.deepin.dde.LangSelector1.AddLocale
    QMetaObject::invokeMethod(parent(), "AddLocale", Q_ARG(QString, in0));
}

void LangSelector1Adaptor::DeleteLocale(const QString &in0)
{
    // handle method call org.deepin.dde.LangSelector1.DeleteLocale
    QMetaObject::invokeMethod(parent(), "DeleteLocale", Q_ARG(QString, in0));
}

QStringList LangSelector1Adaptor::GetLanguageSupportPackages(const QString &in0)
{
    // handle method call org.deepin.dde.LangSelector1.GetLanguageSupportPackages
    QStringList out0;
    QMetaObject::invokeMethod(parent(), "GetLanguageSupportPackages", Q_RETURN_ARG(QStringList, out0), Q_ARG(QString, in0));
    return out0;
}

QString LangSelector1Adaptor::GetLocaleDescription(const QString &in0)
{
    // handle method call org.deepin.dde.LangSelector1.GetLocaleDescription
    QString out0;
    QMetaObject::invokeMethod(parent(), "GetLocaleDescription", Q_RETURN_ARG(QString, out0), Q_ARG(QString, in0));
    return out0;
}

LocaleList LangSelector1Adaptor::GetLocaleList()
{
    // handle method call org.deepin.dde.LangSelector1.GetLocaleList
    LocaleList out0;
    QMetaObject::invokeMethod(parent(), "GetLocaleList", Q_RETURN_ARG(LocaleList, out0));
    return out0;
}

void LangSelector1Adaptor::Reset()
{
    // handle method call org.deepin.dde.LangSelector1.Reset
    QMetaObject::invokeMethod(parent(), "Reset");
}

void LangSelector1Adaptor::SetLocale(const QString &in0)
{
    // handle method call org.deepin.dde.LangSelector1.SetLocale
    QMetaObject::invokeMethod(parent(), "SetLocale", Q_ARG(QString, in0));
}

