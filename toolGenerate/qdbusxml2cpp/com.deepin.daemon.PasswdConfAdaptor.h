/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp ./dde-api-proxy/file/dbus/v0/system/com.deepin.daemon.PasswdConf.xml -a ./dde-api-proxy/toolGenerate/qdbusxml2cpp/com.deepin.daemon.PasswdConfAdaptor -i ./dde-api-proxy/toolGenerate/qdbusxml2cpp/com.deepin.daemon.PasswdConf.h
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef COM_DEEPIN_DAEMON_PASSWDCONFADAPTOR_H
#define COM_DEEPIN_DAEMON_PASSWDCONFADAPTOR_H

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
#include "./dde-api-proxy/toolGenerate/qdbusxml2cpp/com.deepin.daemon.PasswdConf.h"
QT_BEGIN_NAMESPACE
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;
QT_END_NAMESPACE

/*
 * Adaptor class for interface com.deepin.daemon.PasswdConf
 */
class PasswdConfAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "com.deepin.daemon.PasswdConf")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"com.deepin.daemon.PasswdConf\">\n"
"    <method name=\"Backup\"/>\n"
"    <method name=\"GetEnabled\">\n"
"      <arg direction=\"out\" type=\"b\" name=\"enabled\"/>\n"
"    </method>\n"
"    <method name=\"GetFirstLetterUpper\">\n"
"      <arg direction=\"out\" type=\"b\" name=\"enabled\"/>\n"
"    </method>\n"
"    <method name=\"GetLengthLimit\">\n"
"      <arg direction=\"out\" type=\"i\" name=\"minLength\"/>\n"
"      <arg direction=\"out\" type=\"i\" name=\"maxLength\"/>\n"
"    </method>\n"
"    <method name=\"GetValidatePolicy\">\n"
"      <arg direction=\"out\" type=\"s\" name=\"validatePolicy\"/>\n"
"    </method>\n"
"    <method name=\"GetValidateRequired\">\n"
"      <arg direction=\"out\" type=\"i\" name=\"validateRequired\"/>\n"
"    </method>\n"
"    <method name=\"ReadConfig\">\n"
"      <arg direction=\"out\" type=\"s\" name=\"data\"/>\n"
"    </method>\n"
"    <method name=\"Reset\"/>\n"
"    <method name=\"SetEnabled\">\n"
"      <arg direction=\"in\" type=\"b\" name=\"enabled\"/>\n"
"    </method>\n"
"    <method name=\"SetFirstLetterUpper\">\n"
"      <arg direction=\"in\" type=\"b\" name=\"enabled\"/>\n"
"    </method>\n"
"    <method name=\"SetLengthLimit\">\n"
"      <arg direction=\"in\" type=\"i\" name=\"minLength\"/>\n"
"      <arg direction=\"in\" type=\"i\" name=\"maxLength\"/>\n"
"    </method>\n"
"    <method name=\"SetValidatePolicy\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"validatePolicy\"/>\n"
"    </method>\n"
"    <method name=\"SetValidateRequired\">\n"
"      <arg direction=\"in\" type=\"i\" name=\"validateRequired\"/>\n"
"    </method>\n"
"    <method name=\"WriteConfig\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"data\"/>\n"
"    </method>\n"
"  </interface>\n"
        "")
public:
    PasswdConfAdaptor(QObject *parent);
    virtual ~PasswdConfAdaptor();

public: // PROPERTIES
public Q_SLOTS: // METHODS
    void Backup();
    bool GetEnabled();
    bool GetFirstLetterUpper();
    int GetLengthLimit(int &maxLength);
    QString GetValidatePolicy();
    int GetValidateRequired();
    QString ReadConfig();
    void Reset();
    void SetEnabled(bool enabled);
    void SetFirstLetterUpper(bool enabled);
    void SetLengthLimit(int minLength, int maxLength);
    void SetValidatePolicy(const QString &validatePolicy);
    void SetValidateRequired(int validateRequired);
    void WriteConfig(const QString &data);
Q_SIGNALS: // SIGNALS
};

#endif
