/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp ./dde-api-proxy/file/dbus/v0/session/com.deepin.dde.Dock.xml -a ./dde-api-proxy/toolGenerate/qdbusxml2cpp/com.deepin.dde.DockAdaptor -i ./dde-api-proxy/toolGenerate/qdbusxml2cpp/com.deepin.dde.Dock.h
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef COM_DEEPIN_DDE_DOCKADAPTOR_H
#define COM_DEEPIN_DDE_DOCKADAPTOR_H

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
#include "./dde-api-proxy/toolGenerate/qdbusxml2cpp/com.deepin.dde.Dock.h"
QT_BEGIN_NAMESPACE
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;
QT_END_NAMESPACE

/*
 * Adaptor class for interface com.deepin.dde.Dock
 */
class DockAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "com.deepin.dde.Dock")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"com.deepin.dde.Dock\">\n"
"    <property access=\"read\" type=\"(iiii)\" name=\"geometry\">\n"
"      <annotation value=\"DockGeometry\" name=\"org.qtproject.QtDBus.QtTypeName\"/>\n"
"    </property>\n"
"    <property access=\"readwrite\" type=\"b\" name=\"showInPrimary\"/>\n"
"    <method name=\"callShow\"/>\n"
"    <method name=\"ReloadPlugins\"/>\n"
"    <method name=\"GetLoadedPlugins\">\n"
"      <arg direction=\"out\" type=\"as\" name=\"list\"/>\n"
"    </method>\n"
"    <method name=\"resizeDock\">\n"
"      <arg direction=\"in\" type=\"i\" name=\"offset\"/>\n"
"      <arg direction=\"in\" type=\"b\" name=\"dragging\"/>\n"
"    </method>\n"
"    <method name=\"getPluginKey\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"pluginName\"/>\n"
"      <arg direction=\"out\" type=\"s\" name=\"key\"/>\n"
"    </method>\n"
"    <method name=\"getPluginVisible\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"pluginName\"/>\n"
"      <arg direction=\"out\" type=\"b\" name=\"visible\"/>\n"
"    </method>\n"
"    <method name=\"setPluginVisible\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"pluginName\"/>\n"
"      <arg direction=\"in\" type=\"b\" name=\"visible\"/>\n"
"    </method>\n"
"    <signal name=\"pluginVisibleChanged\">\n"
"      <arg type=\"s\"/>\n"
"      <arg type=\"b\"/>\n"
"    </signal>\n"
"  </interface>\n"
        "")
public:
    DockAdaptor(QObject *parent);
    virtual ~DockAdaptor();

public: // PROPERTIES
    Q_PROPERTY(DockGeometry geometry READ geometry)
    DockGeometry geometry() const;

    Q_PROPERTY(bool showInPrimary READ showInPrimary WRITE setShowInPrimary)
    bool showInPrimary() const;
    void setShowInPrimary(bool value);

public Q_SLOTS: // METHODS
    QStringList GetLoadedPlugins();
    void ReloadPlugins();
    void callShow();
    QString getPluginKey(const QString &pluginName);
    bool getPluginVisible(const QString &pluginName);
    void resizeDock(int offset, bool dragging);
    void setPluginVisible(const QString &pluginName, bool visible);
Q_SIGNALS: // SIGNALS
    void pluginVisibleChanged(const QString &in0, bool in1);
};

#endif
