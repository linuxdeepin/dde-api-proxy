/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp ./dde-api-proxy/file/dbus/v1/session/org.deepin.dde.LockFront1.xml -a ./dde-api-proxy/toolGenerate/qdbusxml2cpp/org.deepin.dde.LockFront1Adaptor -i ./dde-api-proxy/toolGenerate/qdbusxml2cpp/org.deepin.dde.LockFront1.h
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "./dde-api-proxy/toolGenerate/qdbusxml2cpp/org.deepin.dde.LockFront1Adaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class LockFront1Adaptor
 */

LockFront1Adaptor::LockFront1Adaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

LockFront1Adaptor::~LockFront1Adaptor()
{
    // destructor
}

bool LockFront1Adaptor::visible() const
{
    // get the value of property Visible
    return qvariant_cast< bool >(parent()->property("Visible"));
}

void LockFront1Adaptor::Hibernate(bool enable)
{
    // handle method call org.deepin.dde.LockFront1.Hibernate
    QMetaObject::invokeMethod(parent(), "Hibernate", Q_ARG(bool, enable));
}

void LockFront1Adaptor::Show()
{
    // handle method call org.deepin.dde.LockFront1.Show
    QMetaObject::invokeMethod(parent(), "Show");
}

void LockFront1Adaptor::ShowAuth(bool active)
{
    // handle method call org.deepin.dde.LockFront1.ShowAuth
    QMetaObject::invokeMethod(parent(), "ShowAuth", Q_ARG(bool, active));
}

void LockFront1Adaptor::ShowUserList()
{
    // handle method call org.deepin.dde.LockFront1.ShowUserList
    QMetaObject::invokeMethod(parent(), "ShowUserList");
}

void LockFront1Adaptor::Suspend(bool enable)
{
    // handle method call org.deepin.dde.LockFront1.Suspend
    QMetaObject::invokeMethod(parent(), "Suspend", Q_ARG(bool, enable));
}

