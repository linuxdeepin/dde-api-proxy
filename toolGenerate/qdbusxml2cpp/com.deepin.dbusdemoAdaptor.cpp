/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp ./dde-api-proxy/file/dbus/v0/session/com.deepin.dbusdemo.xml -a ./dde-api-proxy/toolGenerate/qdbusxml2cpp/com.deepin.dbusdemoAdaptor -i ./dde-api-proxy/toolGenerate/qdbusxml2cpp/com.deepin.dbusdemo.h
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "./dde-api-proxy/toolGenerate/qdbusxml2cpp/com.deepin.dbusdemoAdaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class DbusdemoAdaptor
 */

DbusdemoAdaptor::DbusdemoAdaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

DbusdemoAdaptor::~DbusdemoAdaptor()
{
    // destructor
}

uint DbusdemoAdaptor::age() const
{
    // get the value of property Age
    return qvariant_cast< uint >(parent()->property("Age"));
}

void DbusdemoAdaptor::setAge(uint value)
{
    // set the value of property Age
    parent()->setProperty("Age", QVariant::fromValue(value));
}

AreaList DbusdemoAdaptor::areas() const
{
    // get the value of property Areas
    return qvariant_cast< AreaList >(parent()->property("Areas"));
}

void DbusdemoAdaptor::setAreas(AreaList value)
{
    // set the value of property Areas
    parent()->setProperty("Areas", QVariant::fromValue(value));
}

QDBusObjectPath DbusdemoAdaptor::currentSessionPath() const
{
    // get the value of property CurrentSessionPath
    return qvariant_cast< QDBusObjectPath >(parent()->property("CurrentSessionPath"));
}

bool DbusdemoAdaptor::locked() const
{
    // get the value of property Locked
    return qvariant_cast< bool >(parent()->property("Locked"));
}

QString DbusdemoAdaptor::Hello()
{
    // handle method call com.deepin.dbusdemo.Hello
    QString out0;
    QMetaObject::invokeMethod(parent(), "Hello", Q_RETURN_ARG(QString, out0));
    return out0;
}

bool DbusdemoAdaptor::Register(const QString &id)
{
    // handle method call com.deepin.dbusdemo.Register
    bool result;
    QMetaObject::invokeMethod(parent(), "Register", Q_RETURN_ARG(bool, result), Q_ARG(QString, id));
    return result;
}

bool DbusdemoAdaptor::SetArea(const QString &id, AreaList area)
{
    // handle method call com.deepin.dbusdemo.SetArea
    bool result;
    QMetaObject::invokeMethod(parent(), "SetArea", Q_RETURN_ARG(bool, result), Q_ARG(QString, id), Q_ARG(AreaList, area));
    return result;
}

