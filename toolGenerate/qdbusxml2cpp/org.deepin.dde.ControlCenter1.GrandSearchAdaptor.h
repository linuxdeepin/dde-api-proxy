/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp ./dde-api-proxy/file/dbus/v1/session/org.deepin.dde.ControlCenter1.GrandSearch.xml -a ./dde-api-proxy/toolGenerate/qdbusxml2cpp/org.deepin.dde.ControlCenter1.GrandSearchAdaptor -i ./dde-api-proxy/toolGenerate/qdbusxml2cpp/org.deepin.dde.ControlCenter1.GrandSearch.h
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef ORG_DEEPIN_DDE_CONTROLCENTER1_GRANDSEARCHADAPTOR_H
#define ORG_DEEPIN_DDE_CONTROLCENTER1_GRANDSEARCHADAPTOR_H

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
#include "./dde-api-proxy/toolGenerate/qdbusxml2cpp/org.deepin.dde.ControlCenter1.GrandSearch.h"
QT_BEGIN_NAMESPACE
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;
QT_END_NAMESPACE

/*
 * Adaptor class for interface org.deepin.dde.ControlCenter1.GrandSearch
 */
class GrandSearchAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "org.deepin.dde.ControlCenter1.GrandSearch")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"org.deepin.dde.ControlCenter1.GrandSearch\">\n"
"    <method name=\"Search\">\n"
"      <arg direction=\"out\" type=\"s\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"json\"/>\n"
"    </method>\n"
"    <method name=\"Stop\">\n"
"      <arg direction=\"out\" type=\"b\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"json\"/>\n"
"    </method>\n"
"    <method name=\"Action\">\n"
"      <arg direction=\"out\" type=\"b\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"json\"/>\n"
"    </method>\n"
"  </interface>\n"
        "")
public:
    GrandSearchAdaptor(QObject *parent);
    virtual ~GrandSearchAdaptor();

public: // PROPERTIES
public Q_SLOTS: // METHODS
    bool Action(const QString &json);
    QString Search(const QString &json);
    bool Stop(const QString &json);
Q_SIGNALS: // SIGNALS
};

#endif
